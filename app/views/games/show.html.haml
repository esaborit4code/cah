%p
  Jugador: #{current_player.name}.
  #{ button_to 'Salir de la partida', games_drop_player_path, method: :post, class: 'tiny button' }

- current_player_answer = current_question.answers.find_by(player: current_player)
- already_answered = current_player_answer.present?
- must_answer = current_player.player? && current_player_answer.blank?

.card.card--question #{current_question.text}

%p Zar: #{tzar.name}#{ ' (TÃº)' if current_player.tzar? }

- unless missing_answers.zero?
  %p Faltan #{missing_answers} de #{total_answers} respuestas
- else
  - current_question.answers.each do |answer|
    .card.card--answer
      = answer.text
      - if current_player.tzar?
        = form_for :answer, url: games_choose_winner_answer_path, method: :post do |f|
          = f.hidden_field :id, value: answer.id
          = f.submit 'Elegir', class: 'button expanded no-margin margin-top'

%h2 Tus respuestas
- current_player_unused_answers.each do |answer|
  .card.card--answer
    = answer.text
    - if must_answer
      = form_for :answer, url: games_leave_answer_path, method: :post do |f|
        = f.hidden_field :id, value: answer.id
        = f.submit 'Usar', class: 'button expanded no-margin margin-top'


%h3 Puntuaciones
%ul
  - max_score = players.map(&:score).max
  - players.each do |player|
    - player_and_score = "#{player.name}: #{player.score}"
    %li
      - if player.score == max_score
        %b= player_and_score
      - else
        = player_and_score

- if previous_questions.any?
  %h3 Preguntas anteriores (#{current_question.round - 1})
  - previous_questions.each do |question|
    .card.card--question= question.text
    - question.answers.order(winner: :desc).each do |answer|
      .card.card--answer
        %span= answer.text
        - if answer.winner?
          %div
            %span.label Ganadora
